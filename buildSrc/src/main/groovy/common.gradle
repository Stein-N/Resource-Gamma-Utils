plugins {
    id 'java-library'
}

base {
    archivesName = "${mod_id}-${project.name}"
    version = "${minecraft_version}-${version}"
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(java_version)
}


repositories {
    mavenCentral()
    maven { url 'https://raw.githubusercontent.com/Stein-N/resources/main/maven' }
    maven {url "https://maven.terraformersmc.com/" }
}

tasks.named('javadoc', Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

tasks.withType(GenerateModuleMetadata).configureEach {
    enabled = false
}

jar {
    from(rootProject.file("LICENSE")) {
        rename { "${it}_${mod_name}" }
    }

    manifest {
        attributes([
                'Specification-Title'   : mod_name,
                'Specification-Vendor'  : mod_author,
                'Specification-Version' : project.jar.archiveVersion,
                'Implementation-Title'  : project.name,
                'Implementation-Version': project.jar.archiveVersion,
                'Implementation-Vendor' : mod_author,
                'Built-On-Minecraft'    : minecraft_version
        ])
    }
}

processResources {
    var expandProps = [
            // Project related Keys
            "version": version,
            "group": project.group,
            "java_version": java_version,

            // Mod related Keys
            "minecraft_version": minecraft_version,
            "mod_name": mod_name,
            "mod_author": mod_author,
            "mod_id": mod_id,
            "mod_license": mod_license,
            "mod_description": mod_description,

            // Loader Keys
            "fabric_api": fabric_api,
            "fabric_loader": fabric_loader,
            "forge": forge,
            "neoforge": neoforge

    ]

    filesMatching(['pack.mcmeta', 'fabric.mod.json', 'META-INF/neoforge.mods.toml', 'META-INF/mods.toml', '*.mixins.json']) {
        expand expandProps
    }
    inputs.properties(expandProps)
}